version: 1.7.{build}
pull_requests:
  do_not_increment_build_number: true
branches:
  only:
  - master
  - production
os: Visual Studio 2015
configuration: Release
platform: Any CPU
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'
services:
  - postgresql93
build_script:
- cmd: >-
    nuget.exe sources Add -Name LeDotNetProjectFeed -Source https://ci.appveyor.com/nuget/le-dotnet-hslfeubjh9oe

    nuget.exe restore

    "C:\Program Files (x86)\MSBuild\14.0\Bin\MSBuild.exe" "PalMon.sln" /verbosity:minimal /p:Configuration=Release /p:Platform="Mixed Platforms" /t:Clean /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

    "C:\Program Files (x86)\MSBuild\14.0\Bin\MSBuild.exe" "PalMon.sln" /verbosity:minimal /p:Configuration=Release /p:Platform="Mixed Platforms"  /t:Build /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

    move PalMonServiceInstaller\bin\Release\PalMon.msi PalMonServiceInstaller\bin\Release\Palette-Insight-v%APPVEYOR_BUILD_VERSION%-installer.msi
test_script:
    # Runt TypeMock unit tests
    - C:\projects\blackboxrecorder\test\resources\TypeMock\Isolator\8.2\AutoDeploy\TMockRunner.exe -register Starschema DF7E-AE4N-7BAB-EFC4-463B -thisFolder vstest.console.exe /logger:Appveyor "C:\projects\blackboxrecorder\test\PalMon.UnitTests\bin\Release\PalMon.UnitTests.dll"

    # Setup Postgres 9.3 on the worker
    - SET PGUSER=postgres
    - SET PGPASSWORD=Password12!
    - PATH=C:\Program Files\PostgreSQL\9.3\bin\;%PATH%
    - createdb workgroup
    # Setup target database
    - createdb "PalMon"
    - psql -a -c "create user palmon with password 'password';"
    - psql -a -c "grant all on database \"PalMon\" to palmon;"
    # Setup fake Tableau database
    - psql -a -c "create user readonly with password 'onlyread';"
    - psql -a -c "grant all on database workgroup to readonly;"
    - SET PGUSER=readonly
    - SET PGPASSWORD=onlyread
    - psql -a -c "CREATE TABLE core_licenses ( allocated_cores integer );" -d workgroup
    - psql -a -c "INSERT INTO core_licenses VALUES (64);" -d workgroup

    # Make a sample run of Palette Insight Agent
    - echo "Try a Palette Insight install and uninstall"
    - cd PalMonServiceInstaller\bin\Release\
    - set PALIN_MSI=Palette-Insight-v%APPVEYOR_BUILD_VERSION%-installer.msi
    - msiexec.exe /qn /i %PALIN_MSI%
    # Set the Postgres port in Config.yml
    - SET WATCHED_FOLDER_1=c:\watched_folder_1
    - SET WATCHED_FOLDER_2=c:\watched_folder_2
    - md %WATCHED_FOLDER_1%
    - md %WATCHED_FOLDER_2%
    - ps: >-
        $env:CONFIG_YML_PATH = "C:\Program Files (x86)\Palette Insight Agent\Config\Config.yml"
        (Get-Content $env:CONFIG_YML_PATH) | ForEach-Object { $_ -replace "8060", "5432" } | Set-Content $env:CONFIG_YML_PATH
        (Get-Content $env:CONFIG_YML_PATH) | ForEach-Object { $_ -replace "c:\\ProgramData\\Tableau\\Tableau Server\\data\\tabsvc\\vizqlserver\\Logs", "c:\\watched_folder_1" } | Set-Content $env:CONFIG_YML_PATH
        (Get-Content $env:CONFIG_YML_PATH) | ForEach-Object { $_ -replace "c:\\ProgramData\\Tableau\\Tableau Server\\data\\tabsvc\\logs\\vizqlserver", "c:\\watched_folder_2" } | Set-Content $env:CONFIG_YML_PATH
    - copy "c:\projects\blackboxrecorder\PalMon\debug.license" "c:\Program Files (x86)\Palette Insight Agent"

    # Temporarily try to get insight-tester from Cubby, since github releases are private if the repo is private
    - ps: (New-Object Net.WebClient).DownloadFile('https://www.cubbyusercontent.com/pl/windows_amd64.zip/_9ad90cb684fd4e7393f655e82343dbc9', 'C:\projects\blackboxrecorder\PalMonServiceInstaller\bin\Release\insight-tester.zip')
#    - ps: (New-Object Net.WebClient).DownloadFile('https://github.com/palette-software/insight-tester/releases/download/v0.0/windows_amd64.zip', 'C:\projects\blackboxrecorder\PalMonServiceInstaller\bin\Release\insight-tester.zip')
    - echo "Downloaded insight-tester"
    - ps: Add-Type -A 'System.IO.Compression.FileSystem'; [IO.Compression.ZipFile]::ExtractToDirectory('C:\projects\blackboxrecorder\PalMonServiceInstaller\bin\Release\insight-tester.zip', 'C:\projects\blackboxrecorder\PalMonServiceInstaller\bin\Release');
    - echo "Unzipped insight tester"
    - windows_amd64\agentrunner.exe start
    - echo "Started PalMon service"
    - sleep 15
    - echo "Sleeping for 15 seconds"
    - windows_amd64\agentrunner.exe stop
    - echo "Contents of the PalMon log"
    - type "C:\Program Files (x86)\Palette Insight Agent\Logs\PalMon.nlog.txt"
    - echo "End of PalMon log"
    - echo "Installed Palette Insight successfully"
    - msiexec.exe /qn /x %PALIN_MSI%
    - echo "Uninstalled Palette Insight successfully"
artifacts:
- path: PalMonServiceInstaller\bin\Release\*.msi
  name: Github
deploy:
- provider: GitHub
  tag: v$(appveyor_build_version)
  release: Palette Insight v$(appveyor_build_version)
  auth_token:
    secure: Y8zvK91qR+RxmrmqdSPNYGAoLJFytPzX6cVSnHv4LY358RJfTrpzwiWuDumqYNps
  artifact: '*.msi'
  draft: true
  prerelease: true
  on:
    branch: production
notifications:
- provider: Slack
  incoming_webhook: https://hooks.slack.com/services/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
  auth_token:
    secure: YID5KzjUO9Nx2GlLOibJMA==
  channel: dev-robots
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: true

on_finish:
- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
