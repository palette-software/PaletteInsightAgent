//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PalMon.Config
{
    /// <summary>
    /// The PalMonConfig Configuration Section.
    /// </summary>
    public partial class PalMonConfig : global::System.Configuration.ConfigurationSection
    {
        #region Singleton Instance

        /// <summary>
        /// The XML name of the PalMonConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PalMonConfigSectionName = "PalMonConfig";

        /// <summary>
        /// The XML path of the PalMonConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PalMonConfigSectionPath = "PalMonConfig";

        /// <summary>
        /// Gets the PalMonConfig instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static global::PalMon.Config.PalMonConfig Instance
        {
            get
            {
                return ((global::PalMon.Config.PalMonConfig)(global::System.Configuration.ConfigurationManager.GetSection(global::PalMon.Config.PalMonConfig.PalMonConfigSectionPath)));
            }
        }

        #endregion Singleton Instance

        #region Xmlns Property

        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string XmlnsPropertyName = "xmlns";

        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.PalMonConfig.XmlnsPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::PalMon.Config.PalMonConfig.XmlnsPropertyName]));
            }
        }

        #endregion Xmlns Property

        #region IsReadOnly override

        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }

        #endregion IsReadOnly override

        #region Database Property

        /// <summary>
        /// The XML name of the <see cref="Database"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DatabasePropertyName = "Database";

        /// <summary>
        /// Gets or sets contains configuration information for the results database.  Only required if OutputMode is "DB".
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("Contains configuration information for the results database.  Only required if Ou" +
            "tputMode is \"DB\".")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.PalMonConfig.DatabasePropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public virtual global::PalMon.Config.Database Database
        {
            get
            {
                return ((global::PalMon.Config.Database)(base[global::PalMon.Config.PalMonConfig.DatabasePropertyName]));
            }
            set
            {
                base[global::PalMon.Config.PalMonConfig.DatabasePropertyName] = value;
            }
        }

        #endregion Database Property

        #region Clusters Property

        /// <summary>
        /// The XML name of the <see cref="Clusters"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ClustersPropertyName = "Clusters";

        /// <summary>
        /// Gets or sets contains definitions of which machines to monitor and their logical clustering.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("Contains definitions of which machines to monitor and their logical clustering.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.PalMonConfig.ClustersPropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false)]
        public virtual global::PalMon.Config.Clusters Clusters
        {
            get
            {
                return ((global::PalMon.Config.Clusters)(base[global::PalMon.Config.PalMonConfig.ClustersPropertyName]));
            }
            set
            {
                base[global::PalMon.Config.PalMonConfig.ClustersPropertyName] = value;
            }
        }

        #endregion Clusters Property

        #region PollInterval Property

        /// <summary>
        /// The XML name of the <see cref="PollInterval"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PollIntervalPropertyName = "PollInterval";

        /// <summary>
        /// Gets or sets contains information about the polling frequency.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("Contains information about the polling frequency.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.PalMonConfig.PollIntervalPropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false)]
        public virtual global::PalMon.Config.PollInterval PollInterval
        {
            get
            {
                return ((global::PalMon.Config.PollInterval)(base[global::PalMon.Config.PalMonConfig.PollIntervalPropertyName]));
            }
            set
            {
                base[global::PalMon.Config.PalMonConfig.PollIntervalPropertyName] = value;
            }
        }

        #endregion PollInterval Property

        #region OutputMode Property

        /// <summary>
        /// The XML name of the <see cref="OutputMode"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string OutputModePropertyName = "OutputMode";

        /// <summary>
        /// Gets or sets contains information about the result output mode.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("Contains information about the result output mode.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.PalMonConfig.OutputModePropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false)]
        public virtual global::PalMon.Config.OutputMode OutputMode
        {
            get
            {
                return ((global::PalMon.Config.OutputMode)(base[global::PalMon.Config.PalMonConfig.OutputModePropertyName]));
            }
            set
            {
                base[global::PalMon.Config.PalMonConfig.OutputModePropertyName] = value;
            }
        }

        #endregion OutputMode Property
    }
}

namespace PalMon.Config
{
    /// <summary>
    /// Represents a logical grouping of hosts.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::PalMon.Config.Host), CollectionType = global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName = global::PalMon.Config.Cluster.HostPropertyName)]
    public partial class Cluster : global::System.Configuration.ConfigurationElementCollection
    {
        #region Constants

        /// <summary>
        /// The XML name of the individual <see cref="global::PalMon.Config.Host"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HostPropertyName = "Host";

        #endregion Constants

        #region Overrides

        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }

        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::PalMon.Config.Cluster.HostPropertyName;
            }
        }

        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::PalMon.Config.Cluster.HostPropertyName);
        }

        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::PalMon.Config.Host)(element)).Name;
        }

        /// <summary>
        /// Creates a new <see cref="global::PalMon.Config.Host"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::PalMon.Config.Host"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::PalMon.Config.Host();
        }

        #endregion Overrides

        #region Indexer

        /// <summary>
        /// Gets the <see cref="global::PalMon.Config.Host"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::PalMon.Config.Host"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::PalMon.Config.Host this[int index]
        {
            get
            {
                return ((global::PalMon.Config.Host)(base.BaseGet(index)));
            }
        }

        /// <summary>
        /// Gets the <see cref="global::PalMon.Config.Host"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::PalMon.Config.Host"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::PalMon.Config.Host this[object name]
        {
            get
            {
                return ((global::PalMon.Config.Host)(base.BaseGet(name)));
            }
        }

        #endregion Indexer

        #region Add

        /// <summary>
        /// Adds the specified <see cref="global::PalMon.Config.Host"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="Host">The <see cref="global::PalMon.Config.Host"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::PalMon.Config.Host Host)
        {
            base.BaseAdd(Host);
        }

        #endregion Add

        #region Remove

        /// <summary>
        /// Removes the specified <see cref="global::PalMon.Config.Host"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="Host">The <see cref="global::PalMon.Config.Host"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::PalMon.Config.Host Host)
        {
            base.BaseRemove(this.GetElementKey(Host));
        }

        #endregion Remove

        #region GetItem

        /// <summary>
        /// Gets the <see cref="global::PalMon.Config.Host"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::PalMon.Config.Host"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::PalMon.Config.Host GetItemAt(int index)
        {
            return ((global::PalMon.Config.Host)(base.BaseGet(index)));
        }

        /// <summary>
        /// Gets the <see cref="global::PalMon.Config.Host"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::PalMon.Config.Host"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::PalMon.Config.Host GetItemByKey(string name)
        {
            return ((global::PalMon.Config.Host)(base.BaseGet(((object)(name)))));
        }

        #endregion GetItem

        #region IsReadOnly override

        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }

        #endregion IsReadOnly override

        #region Name Property

        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";

        /// <summary>
        /// Gets or sets the name of the cluster.  Used to logically group multiple hosts.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The name of the cluster.  Used to logically group multiple hosts.")]
        [global::System.Configuration.StringValidatorAttribute(InvalidCharacters = "", MaxLength = 2147483647, MinLength = 1)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.Cluster.NamePropertyName, IsRequired = true, IsKey = true, IsDefaultCollection = false, DefaultValue = "Primary")]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::PalMon.Config.Cluster.NamePropertyName]));
            }
            set
            {
                base[global::PalMon.Config.Cluster.NamePropertyName] = value;
            }
        }

        #endregion Name Property
    }
}

namespace PalMon.Config
{
    /// <summary>
    /// Contains configuration information for the results database.  Only required if OutputMode is "DB".
    /// </summary>
    public partial class Database : global::System.Configuration.ConfigurationElement
    {
        #region IsReadOnly override

        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }

        #endregion IsReadOnly override

        #region Type Property

        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TypePropertyName = "type";

        /// <summary>
        /// Gets or sets the type of database that this is.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The type of database that this is.")]
        [global::System.Configuration.StringValidatorAttribute(InvalidCharacters = "", MaxLength = 2147483647, MinLength = 1)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.Database.TypePropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false, DefaultValue = "Postgres")]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::PalMon.Config.Database.TypePropertyName]));
            }
            set
            {
                base[global::PalMon.Config.Database.TypePropertyName] = value;
            }
        }

        #endregion Type Property

        #region Name Property

        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";

        /// <summary>
        /// Gets or sets the name of the instantiated database.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The name of the instantiated database.")]
        [global::System.Configuration.StringValidatorAttribute(InvalidCharacters = "", MaxLength = 2147483647, MinLength = 1)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.Database.NamePropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false, DefaultValue = "PalMon")]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::PalMon.Config.Database.NamePropertyName]));
            }
            set
            {
                base[global::PalMon.Config.Database.NamePropertyName] = value;
            }
        }

        #endregion Name Property

        #region Server Property

        /// <summary>
        /// The XML name of the <see cref="Server"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ServerPropertyName = "Server";

        /// <summary>
        /// Gets or sets contains information about the database server location.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("Contains information about the database server location.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.Database.ServerPropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false)]
        public virtual global::PalMon.Config.Server Server
        {
            get
            {
                return ((global::PalMon.Config.Server)(base[global::PalMon.Config.Database.ServerPropertyName]));
            }
            set
            {
                base[global::PalMon.Config.Database.ServerPropertyName] = value;
            }
        }

        #endregion Server Property

        #region User Property

        /// <summary>
        /// The XML name of the <see cref="User"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string UserPropertyName = "User";

        /// <summary>
        /// Gets or sets contains information about the database user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("Contains information about the database user.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.Database.UserPropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false)]
        public virtual global::PalMon.Config.User User
        {
            get
            {
                return ((global::PalMon.Config.User)(base[global::PalMon.Config.Database.UserPropertyName]));
            }
            set
            {
                base[global::PalMon.Config.Database.UserPropertyName] = value;
            }
        }

        #endregion User Property

        #region Table Property

        /// <summary>
        /// The XML name of the <see cref="Table"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string TablePropertyName = "Table";

        /// <summary>
        /// Gets or sets contains information about the results table.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("Contains information about the results table.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.Database.TablePropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false)]
        public virtual global::PalMon.Config.Table Table
        {
            get
            {
                return ((global::PalMon.Config.Table)(base[global::PalMon.Config.Database.TablePropertyName]));
            }
            set
            {
                base[global::PalMon.Config.Database.TablePropertyName] = value;
            }
        }

        #endregion Table Property
    }
}

namespace PalMon.Config
{
    /// <summary>
    /// Represents an individual host.
    /// </summary>
    public partial class Host : global::System.Configuration.ConfigurationElement
    {
        #region IsReadOnly override

        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }

        #endregion IsReadOnly override

        #region Name Property

        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";

        /// <summary>
        /// Gets or sets the hostname or IP address of the host to monitor.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The hostname or IP address of the host to monitor.")]
        [global::System.Configuration.StringValidatorAttribute(InvalidCharacters = "", MaxLength = 2147483647, MinLength = 1)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.Host.NamePropertyName, IsRequired = true, IsKey = true, IsDefaultCollection = false, DefaultValue = "localhost")]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::PalMon.Config.Host.NamePropertyName]));
            }
            set
            {
                base[global::PalMon.Config.Host.NamePropertyName] = value;
            }
        }

        #endregion Name Property
    }
}

namespace PalMon.Config
{
    /// <summary>
    /// Contains information about the database server location.
    /// </summary>
    public partial class Server : global::System.Configuration.ConfigurationElement
    {
        #region IsReadOnly override

        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }

        #endregion IsReadOnly override

        #region Host Property

        /// <summary>
        /// The XML name of the <see cref="Host"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HostPropertyName = "host";

        /// <summary>
        /// Gets or sets the hostname or IP address of the database server.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The hostname or IP address of the database server.")]
        [global::System.Configuration.StringValidatorAttribute(InvalidCharacters = "", MaxLength = 2147483647, MinLength = 1)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.Server.HostPropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false, DefaultValue = "localhost")]
        public virtual string Host
        {
            get
            {
                return ((string)(base[global::PalMon.Config.Server.HostPropertyName]));
            }
            set
            {
                base[global::PalMon.Config.Server.HostPropertyName] = value;
            }
        }

        #endregion Host Property

        #region Port Property

        /// <summary>
        /// The XML name of the <see cref="Port"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PortPropertyName = "port";

        /// <summary>
        /// Gets or sets the port number of the database server.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The port number of the database server.")]
        [global::System.Configuration.IntegerValidatorAttribute(ExcludeRange = false, MaxValue = 2147483647, MinValue = 1)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.Server.PortPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false, DefaultValue = 5432)]
        public virtual int Port
        {
            get
            {
                return ((int)(base[global::PalMon.Config.Server.PortPropertyName]));
            }
            set
            {
                base[global::PalMon.Config.Server.PortPropertyName] = value;
            }
        }

        #endregion Port Property
    }
}

namespace PalMon.Config
{
    /// <summary>
    /// Contains information about the database user.
    /// </summary>
    public partial class User : global::System.Configuration.ConfigurationElement
    {
        #region IsReadOnly override

        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }

        #endregion IsReadOnly override

        #region Login Property

        /// <summary>
        /// The XML name of the <see cref="Login"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LoginPropertyName = "login";

        /// <summary>
        /// Gets or sets the login for the database user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The login for the database user.")]
        [global::System.Configuration.StringValidatorAttribute(InvalidCharacters = "", MaxLength = 2147483647, MinLength = 1)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.User.LoginPropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false, DefaultValue = "PalMon")]
        public virtual string Login
        {
            get
            {
                return ((string)(base[global::PalMon.Config.User.LoginPropertyName]));
            }
            set
            {
                base[global::PalMon.Config.User.LoginPropertyName] = value;
            }
        }

        #endregion Login Property

        #region Password Property

        /// <summary>
        /// The XML name of the <see cref="Password"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PasswordPropertyName = "password";

        /// <summary>
        /// Gets or sets the password of the database user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The password of the database user.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.User.PasswordPropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false, DefaultValue = "password")]
        public virtual string Password
        {
            get
            {
                return ((string)(base[global::PalMon.Config.User.PasswordPropertyName]));
            }
            set
            {
                base[global::PalMon.Config.User.PasswordPropertyName] = value;
            }
        }

        #endregion Password Property
    }
}

namespace PalMon.Config
{
    /// <summary>
    /// Contains information about the results table.
    /// </summary>
    public partial class Table : global::System.Configuration.ConfigurationElement
    {
        #region IsReadOnly override

        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }

        #endregion IsReadOnly override

        #region Name Property

        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";

        /// <summary>
        /// Gets or sets the name of the database table to write results to.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The name of the database table to write results to.")]
        [global::System.Configuration.StringValidatorAttribute(InvalidCharacters = "", MaxLength = 2147483647, MinLength = 1)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.Table.NamePropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false, DefaultValue = "countersamples")]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::PalMon.Config.Table.NamePropertyName]));
            }
            set
            {
                base[global::PalMon.Config.Table.NamePropertyName] = value;
            }
        }

        #endregion Name Property
    }
}

namespace PalMon.Config
{
    /// <summary>
    /// Contains information about the polling frequency.
    /// </summary>
    public partial class PollInterval : global::System.Configuration.ConfigurationElement
    {
        #region IsReadOnly override

        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }

        #endregion IsReadOnly override

        #region Value Property

        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValuePropertyName = "value";

        /// <summary>
        /// Gets or sets the interval between polling cycles, in seconds.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The interval between polling cycles, in seconds.")]
        [global::System.Configuration.IntegerValidatorAttribute(ExcludeRange = false, MaxValue = 2147483647, MinValue = 1)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.PollInterval.ValuePropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false, DefaultValue = 30)]
        public virtual int Value
        {
            get
            {
                return ((int)(base[global::PalMon.Config.PollInterval.ValuePropertyName]));
            }
            set
            {
                base[global::PalMon.Config.PollInterval.ValuePropertyName] = value;
            }
        }

        #endregion Value Property
    }
}

namespace PalMon.Config
{
    /// <summary>
    /// Contains information about the result output mode.
    /// </summary>
    public partial class OutputMode : global::System.Configuration.ConfigurationElement
    {
        #region IsReadOnly override

        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }

        #endregion IsReadOnly override

        #region Value Property

        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValuePropertyName = "value";

        /// <summary>
        /// Gets or sets the output mode.  "CSV" for local flat file output, or "DB" for database output.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The output mode.  \"CSV\" for local flat file output, or \"DB\" for database output.")]
        [global::System.Configuration.StringValidatorAttribute(InvalidCharacters = "", MaxLength = 2147483647, MinLength = 1)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::PalMon.Config.OutputMode.ValuePropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false, DefaultValue = "db")]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::PalMon.Config.OutputMode.ValuePropertyName]));
            }
            set
            {
                base[global::PalMon.Config.OutputMode.ValuePropertyName] = value;
            }
        }

        #endregion Value Property
    }
}

namespace PalMon.Config
{
    /// <summary>
    /// Contains definitions of which machines to monitor and their logical clustering.  Each cluster may contain multiple hosts.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::PalMon.Config.Cluster), CollectionType = global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName = global::PalMon.Config.Clusters.ClusterPropertyName)]
    public partial class Clusters : global::System.Configuration.ConfigurationElementCollection
    {
        #region Constants

        /// <summary>
        /// The XML name of the individual <see cref="global::PalMon.Config.Cluster"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ClusterPropertyName = "Cluster";

        #endregion Constants

        #region Overrides

        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }

        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::PalMon.Config.Clusters.ClusterPropertyName;
            }
        }

        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::PalMon.Config.Clusters.ClusterPropertyName);
        }

        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::PalMon.Config.Cluster)(element)).Name;
        }

        /// <summary>
        /// Creates a new <see cref="global::PalMon.Config.Cluster"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::PalMon.Config.Cluster"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::PalMon.Config.Cluster();
        }

        #endregion Overrides

        #region Indexer

        /// <summary>
        /// Gets the <see cref="global::PalMon.Config.Cluster"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::PalMon.Config.Cluster"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::PalMon.Config.Cluster this[int index]
        {
            get
            {
                return ((global::PalMon.Config.Cluster)(base.BaseGet(index)));
            }
        }

        /// <summary>
        /// Gets the <see cref="global::PalMon.Config.Cluster"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::PalMon.Config.Cluster"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::PalMon.Config.Cluster this[object name]
        {
            get
            {
                return ((global::PalMon.Config.Cluster)(base.BaseGet(name)));
            }
        }

        #endregion Indexer

        #region Add

        /// <summary>
        /// Adds the specified <see cref="global::PalMon.Config.Cluster"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="Cluster">The <see cref="global::PalMon.Config.Cluster"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::PalMon.Config.Cluster Cluster)
        {
            base.BaseAdd(Cluster);
        }

        #endregion Add

        #region Remove

        /// <summary>
        /// Removes the specified <see cref="global::PalMon.Config.Cluster"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="Cluster">The <see cref="global::PalMon.Config.Cluster"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::PalMon.Config.Cluster Cluster)
        {
            base.BaseRemove(this.GetElementKey(Cluster));
        }

        #endregion Remove

        #region GetItem

        /// <summary>
        /// Gets the <see cref="global::PalMon.Config.Cluster"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::PalMon.Config.Cluster"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::PalMon.Config.Cluster GetItemAt(int index)
        {
            return ((global::PalMon.Config.Cluster)(base.BaseGet(index)));
        }

        /// <summary>
        /// Gets the <see cref="global::PalMon.Config.Cluster"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::PalMon.Config.Cluster"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::PalMon.Config.Cluster GetItemByKey(string name)
        {
            return ((global::PalMon.Config.Cluster)(base.BaseGet(((object)(name)))));
        }

        #endregion GetItem

        #region IsReadOnly override

        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }

        #endregion IsReadOnly override
    }
}